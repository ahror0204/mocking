// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ahror0204/mocking/storage (interfaces: StorageI)

// Package mockdb is a generated GoMock package.
package mockdb

import (
	reflect "reflect"

	storage "github.com/ahror0204/mocking/storage"
	gomock "github.com/golang/mock/gomock"
)

// MockStorageI is a mock of StorageI interface.
type MockStorageI struct {
	ctrl     *gomock.Controller
	recorder *MockStorageIMockRecorder
}

// MockStorageIMockRecorder is the mock recorder for MockStorageI.
type MockStorageIMockRecorder struct {
	mock *MockStorageI
}

// NewMockStorageI creates a new mock instance.
func NewMockStorageI(ctrl *gomock.Controller) *MockStorageI {
	mock := &MockStorageI{ctrl: ctrl}
	mock.recorder = &MockStorageIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorageI) EXPECT() *MockStorageIMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockStorageI) CreateUser(arg0 *storage.User) (*storage.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", arg0)
	ret0, _ := ret[0].(*storage.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockStorageIMockRecorder) CreateUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockStorageI)(nil).CreateUser), arg0)
}

// GetUser mocks base method.
func (m *MockStorageI) GetUser(arg0 int64) (*storage.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", arg0)
	ret0, _ := ret[0].(*storage.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockStorageIMockRecorder) GetUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockStorageI)(nil).GetUser), arg0)
}
